name: Reactjs CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "21"

      - name: Install dependencies
        run: npm install


      #Exécuter le build de l'application
      - name: Build the application
        run: npm run build || true

      #Scan the repository with Snyk
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v4.1.0
        with:
          projectKey: 'Connectify_socialMediaPlatform-Frontend' # La clé de votre projet
          organization: 'nessmahm' # ID de l'organisation SonarCloud/SonarQube
          token: ${{ secrets.SONARQUBE_TOKEN }} # Ajout du token directement dans le champ `with`
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} # URL pour le serveur SonarQube/SonarCloud

      - name: Build Docker image
        run: |
          docker build -t nessmahm/learn-room-front:latest .
          docker login -u nessmahm -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker push nessmahm/learn-room-front:latest

      #Afficher un message de confirmation
      - name: Confirm Build Success
        run: echo "Build completed successfully!"